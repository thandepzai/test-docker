# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: test-ci-cd-docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  dat-gi-cung-duoc:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.10]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up nodejs
      uses: actions/setup-node@v4
      with:
        node-version: "20"

    - name: github tao may ao roi build image cho minh
      run: |
        docker build -t ${{secrets.DOCKER_IMAGE_NAME}} .
        docker tag ${{ secrets.DOCKER_IMAGE_NAME }} ${{secrets.DOCKER_ID}}/${{secrets.DOCKER_IMAGE_NAME}}
        docker login -u ${{ secrets.DOCKER_ID }}/${{ secrets.DOCKER_PASSWORD }}
        docker push ${{ secrets.DOCKER_ID }}/${{ secrets.DOCKER_IMAGE_NAME }}

    - name: Copy file cua minh o server ra root cua github
            uses: appleboy/scp-action@v0.1.7
            with:
              host: ${{ secrets.SERVER_HOST }}
              username: ${{ secrets.SERVER_USERNAME }}
              key: ${{ secrets.SERVER_SSH_KEY }}
              source: "deploy/*"
              target: "/root"

    - name: SSH to server and run script de build image
      uses: appleboy/ssh-action@v1.0.3
      env:
        DOCKER_ID: ${{ secrets.DOCKER_ID }}
        DOCKER_COMPOSE_PATH: "/root/deploy/docker-compose.yml"
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        envs: DOCKER_ID, DOCKER_COMPOSE_PATH
        script_stop: true
        script: |
          echo $DOCKER_COMPOSE_PATH
          echo $DOCKER_PASSWORD
          docker login -u ${{ secrets.DOCKER_ID}} -p ${{ secrets.DOCKER_PASSWORD }}
          docker pull ${{ secrets.DOCKER_ID }}/${{ secrets.DOCKER_IMAGE_NAME}}
          docker-compose -f $DOCKER_COMPOSE_PATH down
          docker-compose -f $DOCKER_COMPOSE_PATH up -d